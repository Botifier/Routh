name: CI

on: [push]

jobs:
  test:
    name: Test the project on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
      - uses: actions/checkout@v2
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
          override: true
      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
      - name: Run clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features
  deploy:
    name: Build and release the project on ${{ matrix.os }}
    if: startsWith(github.ref, 'refs/tags/')
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
      - uses: actions/checkout@v2
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-features
      - name: Pack (*nix)
        run: tar czf ./jwt-cli.tar.gz target/release/jwt-cli
        if: matrix.os != 'windows-latest'
      - name: Pack (windows)
        run: Compress-Archive target/release/jwt-cli.exe jwt-cli.zip
        if: matrix.os == 'windows-latest'
        shell: pwsh
      - name: Create release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload
        uses: actions/upload-release-asset@v1
        if: matrix.os != 'windows-latest'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./jwt-cli.tar.gz
          asset_name: jwt-cli-${{matrix.os}}.tar.gz
          asset_content_type: application/tar+gzip
      - name: Upload
        uses: actions/upload-release-asset@v1
        if: matrix.os == 'windows-latest'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./jwt-cli.zip
          asset_name: jwt-cli-${{matrix.os}}.zip
          asset_content_type: application/zip
